const authDomain = apiResponse["domain"];const currentDomain = window.location.hostname;if (currentDomain !== authDomain){document.addEventListener('DOMContentLoaded',() =>{const end = new Date(apiResponse["endTime"]);const start = new Date(apiResponse["startTime"]);const now = new Date();const total = end - start;const icp = document.getElementById('icp');const title = document.getElementById('title');const progressFill = document.getElementById('progressFill');const percentage = document.getElementById('percentage');const compMsg = document.querySelector('.completion-message');const status = document.getElementById('maintenanceStart');const info = document.getElementById('infoText');const countdown = document.getElementById('countdown');const daysEl = document.querySelector('.days');const hoursEl = document.querySelector('.hours');const minsEl = document.querySelector('.minutes');const secsEl = document.querySelector('.seconds');icp.innerHTML = apiResponse["icpNumber"];title.innerHTML = apiResponse["websiteName"];const formatTime = num => num.toString().padStart(2,'0');const formatDateTime = date => `${formatTime(date.getMonth() + 1)}-${formatTime(date.getDate())}${formatTime(date.getHours())}:${formatTime(date.getMinutes())}`;const calcProgress = () =>{const nowTime = new Date();const elapsed = nowTime - start;return Math.min(100,(elapsed / total) * 100)};const updateCountdown = timeLeft =>{const days = Math.floor(timeLeft / (1000 * 60 * 60 * 24));const hours = Math.floor((timeLeft % (1000 * 60 * 60 * 24)) / (1000 * 60 * 60));const minutes = Math.floor((timeLeft % (1000 * 60 * 60)) / (1000 * 60));const seconds = Math.floor((timeLeft % (1000 * 60)) / 1000);daysEl.textContent = formatTime(days);hoursEl.textContent = formatTime(hours);minsEl.textContent = formatTime(minutes);secsEl.textContent = formatTime(seconds)};const updateAll = () =>{const current = new Date();const timeLeft = end - current;const timeToStart = start - current;if (timeToStart > 0){status.innerHTML = apiResponse["preMaintenanceTitle"] + ` <span id="maintenanceStart">${formatDateTime(start)}</span> 开始维护`;progressFill.style.width = '0%';percentage.textContent = '0%';updateCountdown(timeToStart);info.innerHTML = apiResponse["preMaintenanceContent"];return}if (timeLeft > 0){status.innerHTML = apiResponse["maintenanceTitle"];const progress = calcProgress();progressFill.style.width = `${progress}%`;percentage.textContent = `${Math.floor(progress)}%`;updateCountdown(timeLeft);info.innerHTML = apiResponse["maintenanceContent"]}else{compMsg.style.display = 'flex';countdown.style.display = 'none';progressFill.style.width = '100%';percentage.textContent = '100%';status.innerHTML = apiResponse["postMaintenanceTitle"];info.innerHTML = apiResponse["postMaintenanceContent"]}requestAnimationFrame(updateAll)};let lastUpdate = 0;const loop = timestamp =>{if (timestamp - lastUpdate > 1000){updateAll();lastUpdate = timestamp}requestAnimationFrame(loop)};const handleResize = () =>{const statusCont = document.querySelector('.status-container');if (window.innerWidth >= 768){statusCont.style.flexDirection = 'row'}else{statusCont.style.flexDirection = 'column'}};requestAnimationFrame(loop);window.addEventListener('resize',handleResize);handleResize()})}else{console.log('域名不匹配，不执行代码')}